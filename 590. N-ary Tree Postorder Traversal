/*
// Given an n-ary tree, return the postorder traversal of its nodes' values.
// For example, given a 3-ary tree: 

         1
      /  |  \
     3   2   4
    / \
   5   6

// Return its postorder traversal as: [5,6,3,2,4,1].
*/

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> postorder(Node root) {
        List<Integer> result = new ArrayList<>();
        traversal(root, result);
        return result;
    }
    
    private void traversal(Node root, List<Integer> result) {
        if (root == null) {
            return;
        }
        if (root.children != null) {
            for (Node child: root.children) {
                traversal(child, result);
            }
        }
        result.add(root.val);
    }
}
