/****************************************

961. N-Repeated Element in Size 2N Array

In a array A of size 2N, there are N+1 unique elements, and exactly one of these elements is repeated N times.
Return the element repeated N times.

Example 1:
Input: [1,2,3,3]
Output: 3

Example 2:
Input: [2,1,2,5,3,2]
Output: 2

Example 3:
Input: [5,1,5,2,5,3,5,4]
Output: 5

Note:
4 <= A.length <= 10000
0 <= A[i] < 10000
A.length is even

****************************************/



/******************** Solution01 ********************/
class Solution {
    public int repeatedNTimes(int[] A) {
        Map<Integer, Integer> map = new HashMap<>();
        for(int x : A){
            Integer count = map.get(x);
            if(count == null) {
                map.put(x, 1);
            }
            else {
                return x;
            }
        }
        return 0;
    }
}


/******************** Solution02 ********************/
class Solution {
    public int repeatedNTimes(int[] A) {
        for (int i = 0; i < A.length; i ++) {
            for (int j = i+1; j < A.length; j ++) {
                if (A[i] == A[j]) {
                    return A[i];
                }
                else {continue;}
            }
        }
        return 0;
    }
}
