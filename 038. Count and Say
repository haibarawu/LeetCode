/*
 * @lc app=leetcode id=38 lang=java
 *
 * [38] Count and Say
 *
 * https://leetcode.com/problems/count-and-say/description/
 *
 * algorithms
 * Easy (38.98%)
 * Total Accepted:    249.1K
 * Total Submissions: 637.9K
 * Testcase Example:  '1'
 *
 * The count-and-say sequence is the sequence of integers with the first five
 * terms as following:
 * 
 * 
 * 1.     1
 * 2.     11
 * 3.     21
 * 4.     1211
 * 5.     111221
 * 
 * 
 * 1 is read off as "one 1" or 11.
 * 11 is read off as "two 1s" or 21.
 * 21 is read off as "one 2, then one 1" or 1211.
 * 
 * Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the
 * count-and-say sequence.
 * 
 * Note: Each term of the sequence of integers will be represented as a
 * string.
 * 
 * Example 1:
 * Input: 1
 * Output: "1"
 * 
 * Example 2:
 * Input: 4
 * Output: "1211"
 * 
 */
class Solution {
    public String countAndSay(int n) {
        if(n <= 0) {
            return "";
        }
        
        String result = "1";
        int start = 1;
        
        while(start < n) {
            StringBuilder str = new StringBuilder();
            int count = 1;
            
            for(int i = 1; i < result.length(); i++) {
                if(result.charAt(i) == result.charAt(i-1)) {
                    count++;
                }  
                else {
                    str.append(count);
                    str.append(result.charAt(i-1));
                    count = 1;
                }
            }
            
            str.append(count);
            str.append(result.charAt(result.length()-1));
            result = str.toString();
            start++;
        }

        return result;
    }
}
