/****************************************************************************************************
771. Jewels and Stones

Difficulty: Easy

You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  
Each character in S is a type of stone you have.  
You want to know how many of the stones you have are also jewels.
The letters in J are guaranteed distinct, and all characters in J and S are letters. 
Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:
Input: J = "aA", S = "aAAbbbb"
Output: 3

Example 2:
Input: J = "z", S = "ZZ"
Output: 0

Note:
S and J will consist of letters and have length at most 50.
The characters in J are distinct.
****************************************************************************************************/


//Method1: 
class Solution {
    public int numJewelsInStones(String J, String S) {

        int count = 0;
        for( int i = 0; i < J.length(); i++ )
        {
            for( int j = 0; j < S.length(); j++ )
            {
                if( J.charAt(i) == S.charAt(j) )
                    count++;
            }
        }
        return count;
    }
}


//Method2: 
class Solution {
    public int numJewelsInStones(String J, String S) {
        Set<Character> jSet = new HashSet<>();
        
        for(Character ch : J.toCharArray()) {
            jSet.add(ch);
        }
        int count = 0;
        for(Character ch: S.toCharArray()) {
            if(jSet.contains(ch)) {
                count++;
            }
        }
        return count;
    }
}


//Method3: 
class Solution {
    public int numJewelsInStones(String J, String S) {
        if (J == null || J.length() < 1 || S == null || S.length() < 1) {
            return 0;
        }
        
        int[] arr = new int[100];
        int count = 0;
        
        for (int i = 0; i < J.length(); i++) {
            arr[(J.charAt(i) - 'A')] = 1;
        }
        
        for (int i = 0; i < S.length(); i++) {
            if (arr[(S.charAt(i) - 'A')] == 1) {
                count ++;
            }
        }
        
        return count;
    }
}

